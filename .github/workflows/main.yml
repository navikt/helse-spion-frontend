name: CI

on:
  push:
    branches:
      - main

env:
  IMAGE: ghcr.io/${{ github.repository }}/${{ github.event.repository.name }}:${{ github.sha }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

jobs:

  Bygg:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - uses: actions/upload-artifact@v2
        with:
          name: helse-spion-frontend-artifact
          path: ${{ github.workspace }}/build/**/*

  Kodekvalitet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: yarn install --frozen-lockfile
      - run: yarn test
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: yarn install --frozen-lockfile
      - run: yarn lint

  # Snyk:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/node@master

  Docker:
    needs: [Bygg,Kodekvalitet,Eslint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@v2
        with:
          name: helse-spion-frontend-artifact
          path: build
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and publish Docker image
        run: |
          docker build --pull --tag ${{ env.IMAGE }}  .
          docker push ${{ env.IMAGE }}

  # Deploy:
  #   name: Deploy til PREPROD
  #   needs: Docker
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: nais/deploy/actions/deploy@v1
  #       env:
  #         APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
  #         CLUSTER: dev-gcp
  #         RESOURCE: deploy/dev.yaml

  deploy:
    name: Deploy dev-gcp
    needs: [Docker]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - uses: nais/deploy/actions/deploy@master
        env:
          TEAM: helsearbeidsgiver
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: deploy/dev.yaml
          REF: ${{ env.COMMIT }}
          IMAGE: ${{ env.IMAGE }}
